## version: 1

## requires modules:
[respond]
[force_move]
enable_force_move: True

[gcode_macro _TR_SAFE_UNLOAD_VARIABLES]
variable_pull_length:   2           # how many mm to move filament at once
variable_pull_speed:   10           # how fast to pull in mm/s
variable_pull_extra:   20           # how many mm to pull at the end after selector sensor is untripped
variable_check_delay_ms: 50        # how many miliseconds to wait after motor stop moving to check endstops
variable_pull_again_delay: 0.1        # how many seconds to wait between 2 pulls
gcode:
  RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Variables"


[gcode_macro TR_SAFE_UNLOAD]
gcode:
  QUERY_ENDSTOPS
  _TR_SAFE_UNLOAD_STEP_2

[gcode_macro _TR_SAFE_UNLOAD_STEP_2]
gcode:
  RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Current lane is {printer.trad_rack.curr_lane} and active lane is {printer.trad_rack.active_lane}"
  RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Selector filament sensor: {printer.query_endstops.last_query["tr_fil_driver"]}"
  RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Toolhead filament sensor: {printer.query_endstops.last_query["toolhead_fil_sensor"]}"

  # if both sensors are 0 - don't do anything
  {% if printer.query_endstops.last_query["toolhead_fil_sensor"]|int == 0 and printer.query_endstops.last_query["tr_fil_driver"]|int == 0 %}
    RESPOND PREFIX="info" MSG="Trad Rack Save Unload > No filament detected, nothing to unload"
  {% endif %}

  # if both sensors are 1 - do normal unload
  {% if printer.query_endstops.last_query["toolhead_fil_sensor"]|int == 1 and printer.query_endstops.last_query["tr_fil_driver"]|int == 1 %}
    # if active lane not set it means we need to set it, unload then home then go to first lane
    {% if printer.trad_rack.active_lane == "None" %}
      RESPOND PREFIX="info" MSG="Trad Rack Save Unload > No active lane set, setting fake lane=0"
      TR_SET_ACTIVE_LANE LANE=0
      RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Unloading..."
      TR_UNLOAD_TOOLHEAD
      RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Homing... "
      TR_HOME
      RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Going to lane 0..."
      TR_GO_TO_LANE LANE=0
      RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Done!"
    {% else %}
   # else we have an active lane so we just need to pull filament
      RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Doing normal toolhead unload"
      TR_UNLOAD_TOOLHEAD
    {% endif %}
  {% endif %}

  # if we have filament only in printhead - runout probably - we can't pull anything, selector is already empty
  {% if printer.query_endstops.last_query["toolhead_fil_sensor"]|int == 1 and printer.query_endstops.last_query["tr_fil_driver"]|int == 0 %}
    RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Filament only in toolhead (runout?), nothing to do"
  {% endif %}

  # if we have filament only in selector
  {% if printer.query_endstops.last_query["toolhead_fil_sensor"]|int == 0 and printer.query_endstops.last_query["tr_fil_driver"]|int == 1 %}
    RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Filament between selector and printhead..."
    RESPOND PREFIX="info" MSG="Trad Rack Save Unload > No active lane set, setting fake lane=0"
    TR_SET_ACTIVE_LANE LANE=0
    TR_SERVO_DOWN
    UPDATE_DELAYED_GCODE ID=_TR_SAFE_UNLOAD_PULL DURATION={printer['gcode_macro _TR_SAFE_UNLOAD_VARIABLES'].pull_again_delay}
  {% endif %}

[delayed_gcode _TR_SAFE_UNLOAD_PULL]
initial_duration: 0
gcode:
  RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Pulling {printer['gcode_macro _TR_SAFE_UNLOAD_VARIABLES'].pull_length} mm..."
  {% set distance = -1 * printer['gcode_macro _TR_SAFE_UNLOAD_VARIABLES'].pull_length %}
  FORCE_MOVE stepper=stepper_tr_fil_driver DISTANCE={distance} VELOCITY={printer['gcode_macro _TR_SAFE_UNLOAD_VARIABLES'].pull_speed}
  M400
  G4 P{printer['gcode_macro _TR_SAFE_UNLOAD_VARIABLES'].check_delay_ms}
  QUERY_ENDSTOPS
  _TR_SAFE_UNLOAD_PULL_CHECK

[gcode_macro _TR_SAFE_UNLOAD_PULL_CHECK]
gcode:
  RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Checking selector..."
  {% if printer.query_endstops.last_query["tr_fil_driver"]|int == 1 %}
    UPDATE_DELAYED_GCODE ID=_TR_SAFE_UNLOAD_PULL DURATION=1
  {% else %}
    _TR_SAFE_UNLOAD_END
  {% endif %}

[gcode_macro _TR_SAFE_UNLOAD_END]
gcode:
  RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Pulling extra {printer['gcode_macro _TR_SAFE_UNLOAD_VARIABLES'].pull_extra}..."
  {% set distance = -1 * printer['gcode_macro _TR_SAFE_UNLOAD_VARIABLES'].pull_extra %}
  FORCE_MOVE stepper=stepper_tr_fil_driver DISTANCE={distance} VELOCITY={printer['gcode_macro _TR_SAFE_UNLOAD_VARIABLES'].pull_speed}
  M400
  TR_SERVO_UP
  TR_HOME
  TR_GO_TO_LANE LANE=0
  RESPOND PREFIX="info" MSG="Trad Rack Save Unload > Pulling done!"